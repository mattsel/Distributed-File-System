syntax = "proto3";
package DistributedFileSystem.MasterNode;
option csharp_namespace = "DistributedFileSystem.MasterNode";

service MasterNode {
    rpc CreateNode (CreateNodeRequest) returns (CreateNodeResponse);
    rpc DeleteNode (DeleteNodeRequest) returns (DeleteNodeResponse);
    rpc HandleFiles (HandleFilesRequest) returns (HandleFilesResponse);
    rpc ChunkLocations (ChunkLocationsRequest) returns (ChunkLocationsResponse);
    rpc ListFiles (ListFilesRequest) returns (ListFilesResponse);
    rpc GetWorkerResources (GetWorkerResourcesRequest) returns (GetWorkerResourcesResponse);
}

message CreateNodeRequest {
    string workerAddress = 1;
}

message CreateNodeResponse {
    bool status = 1;
    string message = 2;
}

message DeleteNodeRequest {
    string workerAddress = 1;
}

message DeleteNodeResponse {
    bool status = 1;
    string message = 2;
}

message HandleFilesRequest {
    string fileName = 1;
    bytes chunkData = 2;
    int32 chunkSize = 3;
}

message HandleFilesResponse {
    bool status = 1;
    string message = 2;
}

message ChunkLocationsRequest {
    string fileName = 1;
}

message ChunkLocationsResponse {
    bool status = 1;
    string message = 2;
    repeated string workerAddress = 3;
    repeated string chunkId = 4;
}

message ListFilesRequest {}

message ListFilesResponse {
    bool status = 1;
    string message = 2;
    repeated string fileName = 3;
}

message GetWorkerResourcesRequest {
    string workerAddress = 1;
}

message GetWorkerResourcesResponse {
    bool status = 1;
    string message = 2;
    float cpuUsage = 3;
    float memoryUsage = 4;
    float diskSpace = 5;
}

message DistributeFileRequest {
    string fileName = 1;
    bytes fileData = 2;
}

message DistributeFileResponse {
    bool status = 1;
    string message = 2;
}

message RetrieveFileRequest {
    string fileName = 1;
}

message RetrieveFileResponse {
    bool status = 1;
    string message = 2;
    string fileName = 3;
    repeated bytes fileData = 4;
}

message ReplicateFileChunksRequest {
    string fileName = 1;
}

message ReplicateFileChunksResponse {
    bool status = 1;
    string message = 2;
}

message DeleteFileRequest {
    string fileName = 1;
}

message DeleteFileResponse {
    bool status = 1;
    string message = 2;
}